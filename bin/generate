#!/usr/bin/env node

var path = require('path'),
    fs = require('fs'),
    _ = require('underscore')._,
    ref = require('mapnik-reference').version['3.0.0'];
var color_names = _.keys(ref.colors);
var property_names = _.reduce(ref.symbolizers, function (memo, s) {
    var props = _.values(_.pick(_.values(s), 'css'));
    memo = memo.concat(_.reduce(s, function (m, t) {if(t.css) {m=m.concat([t.css]);} return m;}, []));
    return memo;
}, []);
var keyword_names = _.uniq(_.reduce(ref.symbolizers,
    function(memo, s) {
    for (var i in s) {
        if (_.isArray(s[i].type)) {
            memo = memo.concat(s[i].type);
        }
    }
    return memo;
}, []));
keyword_names.push('true');
keyword_names.push('false');
// Longuer ones before, so "dst" doesn't match before "dst-over"
keyword_names.sort(function (a, b) {
    return b.length - a.length;
});

var template = fs.readFileSync(path.join(__dirname, 'template.xml'), 'utf-8');
template = _.template(template);
template = template({
    color_names: color_names.filter(function(a) { return a; }).join('|'),
    keyword_names: keyword_names.filter(function(a) { return a; }).join('|'),
    property_names: property_names.filter(function(a) { return a; }).join('|')
});
fs.writeFile('Carto.tmLanguage', template, function(err) {
    if (err) throw err;
    console.log('Carto.tmLanguage updated');
});
